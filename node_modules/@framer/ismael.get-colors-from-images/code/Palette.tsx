import * as React from "react"
import { useState, useEffect } from "react"
import { Frame, addPropertyControls, ControlType } from "framer"
import Vibrant = require("node-vibrant")

const defaultBackgroundColor = "rgba(136, 85, 255, 0.1)"
const defaultColor = "#8855FF"

export function Palette(props) {
    const [state, setState] = useState({
        isLoading: false,
        error: false,
        palette: null,
    })

    function getColor(image: string) {
        setState({
            isLoading: true,
            error: false,
            palette: null,
        })

        Vibrant.from(image)
            .getPalette()
            .then(palette => {
                setState({
                    isLoading: false,
                    error: false,
                    palette: palette,
                })
            })
            .catch(_err => {
                setState({
                    isLoading: false,
                    error: true,
                    palette: null,
                })
            })
    }

    function rgbToString(rgbArray) {
        return `rgb(${rgbArray[0]}, ${rgbArray[1]}, ${rgbArray[2]})`
    }

    function backgroundColor() {
        if (state.palette && state.palette[props.profile]) {
            return rgbToString(state.palette[props.profile]._rgb)
        } else {
            return defaultBackgroundColor
        }
    }

    useEffect(() => {
        getColor(props.image)
    }, [props.image])

    const style = {
        color: defaultColor,
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
    }

    return (
        <Frame size="100%" style={style} backgroundColor={backgroundColor()}>
            {state.isLoading && "Loadingâ€¦"}
            {props.image === "" && "Choose an image"}
            {state.error && props.image && "Error"}
            {state.palette &&
                !state.palette[props.profile] &&
                "Unavailable color profile"}
        </Frame>
    )
}

Palette.defaultProps = {
    image: "",
    profile: "Vibrant",
}

addPropertyControls(Palette, {
    image: {
        type: ControlType.Image,
        title: "Image",
    },
    profile: {
        type: ControlType.Enum,
        options: [
            "LightVibrant",
            "Vibrant",
            "DarkVibrant",
            "LightMuted",
            "Muted",
            "DarkMuted",
        ],
        title: "Color profile",
        hidden(props) {
            return props.image === ""
        },
    },
})
