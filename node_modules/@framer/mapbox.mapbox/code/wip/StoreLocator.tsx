import * as React from "react";
import { PropertyControls, ControlType } from "framer";
import "./StoreLocator.css";
import { MapViewportCoordinates } from "../details/MapTypes";
import { MapboxMapCore } from "../details/MapboxMapCore";
import { Marker } from "react-map-gl";
import { Pin } from "../details/Pin";

export interface Store {
  location: { longitude: number; latitude: number };
  name: string;
}

const defaultStores = [{ name: "placeholder", location: { longitude: -43, latitude: 40 } }];

interface Props {
  icon?: any;
  storeFile?: string;
}

interface State {
  stores: Store[];
}

/**
 * Work-in-progress component not ready for publishing.
 */
class StoreLocator extends React.Component<Props, State> {
  static defaultProps: Props = {};

  static propertyControls: PropertyControls<Props> = {
    ...MapboxMapCore.propertyControls,
    icon: {
      type: ControlType.ComponentInstance
    },
    storeFile: {
      type: ControlType.File,
      title: "Store JSON",
      allowedFileTypes: ["json"]
    }
  };

  constructor(props: Props) {
    super(props);
    this.state = {
      stores: defaultStores
    };
    this.loadStoresFromFile(props.storeFile);
  }

  async loadStoresFromFile(file: string) {
    try {
      const response = await fetch(file);
      const json = await response.json();
      this.setState({
        stores: json
      });
    } catch (err) {
      console.log(err);
      this.setState({
        stores: defaultStores
      });
    }
  }

  componentDidUpdate(prev: Props) {
    if (prev.storeFile !== this.props.storeFile) {
      this.loadStoresFromFile(this.props.storeFile);
    }
  }

  handleClick = (spatialCoordinates: Partial<MapViewportCoordinates>) => {
    console.log(spatialCoordinates);
  };

  render() {
    const { icon } = this.props;
    const { stores } = this.state;
    let SidebarButton = (props: { store: Store }) => {
      const { store } = props;
      const element = React.cloneElement(icon[0], { style: displayElementStyle, name: store.name, left: 0, top: 0 });
      return element;
    };
    if (!icon || icon.length < 1) {
      SidebarButton = () => null;
    }

    return (
      <section className="store-locator">
        <ul style={{ margin: 0, padding: 0 }} className="sidebar">
          {stores.map((store: Store, index: number) => {
            const location = store.location;
            return (
              <li style={listStyle} key={index} onClick={() => this.handleClick(location)}>
                <SidebarButton store={store} />
              </li>
            );
          })}
        </ul>
        <MapboxMapCore>
          {stores.map((store: Store, index: number) => {
            const { location } = store;
            return (
              <Marker longitude={location.longitude} latitude={location.latitude} offsetTop={-20} offsetLeft={-10}>
                <Pin onClick={console.log} size={20} />
                <SidebarButton store={store} />
              </Marker>
            );
          })}
        </MapboxMapCore>
      </section>
    );
  }
}

const listStyle: React.CSSProperties = {
  listStyle: "none",
  margin: 0,
  padding: 0
};
const displayElementStyle: React.CSSProperties = {
  position: "relative"
};
